---
apiVersion: argoproj.io/v1beta1
kind: ArgoCD
metadata:
  name: {{ $.Values.argocdInstance | default "openshift-gitops" }}
  namespace: {{ $.Values.argocdNamespace | default "openshift-gitops" }}
spec:
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
    service:
      type: ''
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  monitoring:
    enabled: false
  notifications:
    enabled: false
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  initialSSHKnownHosts: {}
  sso:
    dex:
      openShiftOAuth: true
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 128Mi
    provider: dex
  applicationSet:
    resources:
      limits:
        cpu: '2'
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
    webhookServer:
      ingress:
        enabled: false
      route:
        enabled: false
  rbac:
    defaultPolicy: ''
    policy: |
      g, system:cluster-admins, role:admin
      g, cluster-admins, role:admin
    scopes: '[groups]'
  repo:
    resources:
      limits:
        cpu: '1'
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
      env:
        - name: AVP_AUTH_TYPE
          valueFrom:
            secretKeyRef: 
              key: AVP_AUTH_TYPE
              name: argocd-vault-plugin-credentials
        - name: AVP_TYPE
          valueFrom:
            secretKeyRef: 
              key: AVP_TYPE
              name: argocd-vault-plugin-credentials
        - name: VAULT_ADDR
          valueFrom:
            secretKeyRef: 
              key: VAULT_ADDR
              name: argocd-vault-plugin-credentials
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef: 
              key: VAULT_TOKEN
              name: argocd-vault-plugin-credentials
      volumeMounts:
        - name: custom-tools
          mountPath: /usr/local/bin/argocd-vault-plugin
          subPath: argocd-vault-plugin
      volumes:
      - name: custom-tools
        emptyDir: {}
      initContainers:
      - name: download-tools
        image: alpine:3.8
        command: [sh, -c]

        # Don't forget to update this to whatever the stable release version is
        # Note the lack of the `v` prefix unlike the git tag
        env:
          - name: AVP_VERSION
            value: "1.18.0"
        args:
          - >-
            wget -O argocd-vault-plugin
            https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v${AVP_VERSION}/argocd-vault-plugin_${AVP_VERSION}_linux_amd64 &&
            chmod +x argocd-vault-plugin &&
            mv argocd-vault-plugin /custom-tools/
        volumeMounts:
          - mountPath: /custom-tools
            name: custom-tools
{{- if $.Values.projects }}
  sourceNamespaces:
{{- range .Values.projects }}
{{- range $ns := .destinationsNamespaces }}
    - '{{ $ns }}'
{{- end }}
{{- end }}
{{- end }}
  resourceExclusions: |
    - apiGroups:
      - ""
      - discovery.k8s.io
      clusters:
      - '*'
      kinds:
      - Endpoints
      - EndpointSlice
    - apiGroups:
      - apiregistration.k8s.io
      clusters:
      - '*'
      kinds:
      - APIService
    - apiGroups:
      - coordination.k8s.io
      clusters:
      - '*'
      kinds:
      - Lease
    - apiGroups:
      - authentication.k8s.io
      - authorization.k8s.io
      clusters:
      - '*'
      kinds:
      - SelfSubjectReview
      - TokenReview
      - LocalSubjectAccessReview
      - SelfSubjectAccessReview
      - SelfSubjectRulesReview
      - SubjectAccessReview
    - apiGroups:
      - certificates.k8s.io
      clusters:
      - '*'
      kinds:
      - CertificateSigningRequest
    - apiGroups:
      - cert-manager.io
      clusters:
      - '*'
      kinds:
      - CertificateRequest
    - apiGroups:
      - cilium.io
      clusters:
      - '*'
      kinds:
      - CiliumIdentity
      - CiliumEndpoint
      - CiliumEndpointSlice
    - apiGroups:
      - kyverno.io
      - reports.kyverno.io
      - wgpolicyk8s.io
      clusters:
      - '*'
      kinds:
      - PolicyReport
      - ClusterPolicyReport
      - EphemeralReport
      - ClusterEphemeralReport
      - AdmissionReport
      - ClusterAdmissionReport
      - BackgroundScanReport
      - ClusterBackgroundScanReport
      - UpdateRequest
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  tls:
    ca: {}
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  controller:
    processors: {}
    resources:
      limits:
        cpu: '2'
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi
    sharding: {}

